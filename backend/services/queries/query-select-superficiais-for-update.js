const querySelectSuperficiaisForUpdate = (ids)=> {

    let paramsIds = ids.join(',')

    return `
    USE SRH; 

    /** 
        EDIÇÃO SUPERFICIAL - RETORNA CAPTAÇÕES SUPERFICIAIS 

        OBS: VERIFICAR SE QUER QUE PREENCHA COM NULL OU EM BRANCO OS CAMPOS SEM DADOS 
    */
    SELECT
    -- Id da interferência no sistem snirh 
    '' as INT_CD,
    -- id da interferência no sistema da adasa
    A.ID_INTERFERENCIA as INT_CD_ORIGEM,
    -- mais informações sobre a interferência
    '' INT_DS_OPTIONAL,
    1 INT_TIN_CD,
    -- se superficial ou subterrânea
    A.ID_TIPO_INTERFERENCIA AS INT_TSU_CD,
    '' INT_NU_SIAGAS,
    -- latitude e longitude
    REPLACE(CAST(A.LATITUDE AS VARCHAR),'.',',') AS INT_NU_LATITUDE,
    REPLACE(CAST(A.LONGITUDE  AS VARCHAR),'.',',') AS INT_NU_LONGITUDE,
    '' INT_NM_CORPOHIDRICOALTERADO,
    -- endereço do empreendimento
    B.ENDERECO EMP_NM_EMPREENDIMENTO,
    -- nome do usuário
    C.NOME EMP_NM_RESPONSAVEL,
    -- cpf/cnpj
    CONCAT('#', C.CPF_CNPJ) AS EMP_NU_CPFCNPJ,
    CASE 
        WHEN C.EMAIL IS NULL
        THEN 'naoinformado@gmail.com.br'
        ELSE C.EMAIL
    END  AS EMP_DS_EMAILRESPONSAVEL,
    -- cep do endereço de correspondência
    C.CEP EMP_NU_CEPENDERECO,
    -- logradouro de correspondência
    C.ENDERECO EMP_DS_LOGRADOURO,
    '' EMP_DS_COMPLEMENTOENDERECO,
    '' EMP_NU_LOGRADOURO,
    '' EMP_NU_CAIXAPOSTAL,	
    C.BAIRRO EMP_DS_BAIRRO,	
    C.ESTADO EMP_NU_DDD,	
    C.TELEFONE_1 EMP_NU_TELEFONE,
    5300108 EMP_CD_IBGEMUNCORRESPONDENCIA,
    A.ID_TIPO_INTERFERENCIA OUT_TP_OUTORGA,
    A.ID_SITUACAO OUT_TP_SITUACAOOUTORGA,
    CONVERT(VARCHAR(10),A.DT_PUBLICACAO,103) AS OUT_DT_OUTORGAINICIAL,	
    CASE
        WHEN A.ID_TIPO_OUTORGA = 3
        /*Somar 29 anos a partir da data atual*/
        THEN CONVERT(VARCHAR(10),DATEADD(YEAR, 34, CAST(GETDATE() AS DATE)),103) 
        WHEN A.ID_TIPO_OUTORGA <> 3
        THEN CONVERT(VARCHAR(10),A.DT_VENCIMENTO,103)
    END AS OUT_DT_OUTORGAFINAL,
    A.NUM_PROCESSO AS OUT_NU_PROCESSO,
    D.DESCRICAO AS OUT_TP_AT,
    A.NUM_ATO AS OUT_NU_ATO,
    REPLACE(E.VAZAO, '.', ',') AS DAD_QT_VAZAODIAJAN,
    REPLACE(F.VAZAO, '.', ',') AS DAD_QT_VAZAODIAFEV,
    REPLACE(G.VAZAO, '.', ',') AS DAD_QT_VAZAODIAMAR,
    REPLACE(H.VAZAO, '.', ',') AS DAD_QT_VAZAODIAABR,
    REPLACE(I.VAZAO, '.', ',') AS DAD_QT_VAZAODIAMAI,
    REPLACE(J.VAZAO, '.', ',') AS DAD_QT_VAZAODIAJUN,
    REPLACE(L.VAZAO, '.', ',') AS DAD_QT_VAZAODIAJUL,
    REPLACE(M.VAZAO, '.', ',') AS DAD_QT_VAZAODIAAGO,
    REPLACE(N.VAZAO, '.', ',') AS DAD_QT_VAZAODIASET,
    REPLACE(O.VAZAO, '.', ',') AS DAD_QT_VAZAODIAOUT,
    REPLACE(P.VAZAO, '.', ',') AS DAD_QT_VAZAODIANOV,
    REPLACE(Q.VAZAO, '.', ',') AS DAD_QT_VAZAODIADEZ, 
    E.TEMPO_CAPTACAO AS DAD_QT_HORASJAN,
    F.TEMPO_CAPTACAO AS DAD_QT_HORASFEV,
    G.TEMPO_CAPTACAO AS DAD_QT_HORASMAR,
    H.TEMPO_CAPTACAO AS DAD_QT_HORASABR,
    I.TEMPO_CAPTACAO AS DAD_QT_HORASMAI,
    J.TEMPO_CAPTACAO AS DAD_QT_HORASJUN,
    L.TEMPO_CAPTACAO AS DAD_QT_HORASJUL,
    M.TEMPO_CAPTACAO AS DAD_QT_HORASAGO,
    N.TEMPO_CAPTACAO AS DAD_QT_HORASSET,
    O.TEMPO_CAPTACAO AS DAD_QT_HORASOUT,
    P.TEMPO_CAPTACAO AS DAD_QT_HORASNOV,
    Q.TEMPO_CAPTACAO AS DAD_QT_HORASDEZ,
    E.QT_DIAS AS DAD_QT_DIAJAN,
    F.QT_DIAS AS DAD_QT_DIAFEV,
    G.QT_DIAS AS DAD_QT_DIAMAR,
    H.QT_DIAS AS DAD_QT_DIAABR,
    I.QT_DIAS AS DAD_QT_DIAMAI,
    J.QT_DIAS AS DAD_QT_DIAJUN,
    L.QT_DIAS AS DAD_QT_DIAJUL,
    M.QT_DIAS AS DAD_QT_DIAAGO,
    N.QT_DIAS AS DAD_QT_DIASET,
    O.QT_DIAS AS DAD_QT_DIAOUT,
    P.QT_DIAS AS DAD_QT_DIANOV,
    Q.QT_DIAS AS DAD_QT_DIADEZ,

    0 FIN_CD,
    CASE 
        WHEN S.ID_TIPO_FINALIDADE = 1 AND SUBFINALIDADE = 'PRESTAÇÃO DE SERVIÇOS PÚBLICOS DE ABASTECIMENTO DE ÁGUA'
        THEN 1
        WHEN S.ID_TIPO_FINALIDADE = 1 AND SUBFINALIDADE <> 'PRESTAÇÃO DE SERVIÇOS PÚBLICOS DE ABASTECIMENTO DE ÁGUA'
        THEN 12
        WHEN S.ID_TIPO_FINALIDADE = 2
        THEN 6
        WHEN S.ID_TIPO_FINALIDADE = 3
        THEN 3
        WHEN S.ID_TIPO_FINALIDADE = 4
        THEN 5
        WHEN S.ID_TIPO_FINALIDADE = 5 AND (SUBFINALIDADE NOT LIKE '%LAVAGEM DE VEÍCULOS%' AND SUBFINALIDADE NOT LIKE '%LAVANDERIA%')
        THEN 16
        WHEN S.ID_TIPO_FINALIDADE = 6 AND SUBFINALIDADE LIKE '%MINERAÇÃO%'
        THEN 4
        WHEN (S.ID_TIPO_FINALIDADE = 6 AND SUBFINALIDADE LIKE '%CULTURA%') OR S.ID_TIPO_FINALIDADE = 34
        THEN 7
        
        
        ELSE 99
    END AS FIN_TFN_CD,
    '' FES_NU_PROFUNDIDADEMEDIATANQUE,	
    '' FES_NU_AREATOTALTANQUE,	
    '' TTC_CD,	
    '' TTC_TCU_CD,	
    '' FSE_TES_CD,	
    '' FIE_TPS_CD,	
    '' FAH_TAH_CD,	
    '' FAH_NU_POTENCIAINSTALADA,	
    '' FAH_IC_APROVEITAMENTOFIODAGUA,	
    '' FAH_NU_AREAINUNDADANA,	
    '' FAH_NU_VOLUMENA,	
    '' FPE_TPE_CD,	
    '' FPE_CNA_CD,	
    '' ETP_CD,	
    '' ETP_MPE_CD,	
    '' ETP_NU_QUANTIDADEMAXMENSAL,	
    '' IUS_NU_ALTURARES,	
    '' IUS_NU_AREARESMAX,	
    '' IUS_NU_VOLUMERES,	
    '' IUS_NM_ENTIDADECONCEDENTE,	
    '' IUS_NU_CONCESSAO,	
    '' IUS_DT_FINALCONCESSAO,	
    '' SIR_CD,
    '' SIR_TSI_CD,	
    '' SIR_TCT_CD,
    '' SIR_NU_AREAIRRIGADA,	
    '' FTE_NU_POTENCIAINSTALADA,		
    '' FTE_NU_PRODUCAOMENSALMEDIA,	
    '' FTE_TCO_CD,	
    '' FTE_TSR_CD,	
    '' FEA_NU_PRODUCAOMAXMENSALAREIA,	
    '' FEA_NU_PROPORCAOAGUAPOLPA,	
    '' FEA_PC_TEORUMIDADE,	
    '' FOH_TOH_CD,	
    '' FRE_NU_AREAINUNDADANA,	
    '' FRE_NU_VOLUMENA,	
    '' OTO_TOU_CD,	
    '' OTO_CD,	
    '' OTO_NM_OUTROUSO,	
    '' OTO_DS_OUTROUSO,
    '' HTE_CD,	
    '' HTE_NU_QUANTIDADE,	
    '' TUC_TEC_CD,	
    '' TUC_CD,	
    '' FTR_AR_TOTALEMPREENDIMENTO,	
    '' ESC_CD,
    '' ESC_NU_PRODUCAOPRETENDIDA,	
    '' ESC_TET_CD,	
    '' CTE_CD,	
    '' CTE_TSC_CD,	
    '' CTE_TCA_CD,	
    '' CTE_NU_CABECAS,	
    '' ITC_CD,	
    '' ITC_TUM_CD,	
    '' ITC_NU_PRODUCAOANUAL,	
    '' ITC_CNA_CD,	
    '' EFL_NU_DBOBRUTO,	
    '' EFL_NU_DBOTRATADO,	
    '' EFL_NU_FOSFOROBRUTO,	
    '' EFL_NU_FOSFOROTRATADO,	
    '' EFL_NU_NITROGENIOBRUTO,	
    '' EFL_NU_NITROGENIOTRATADO,	
    '' EFL_NU_TEMPERATURA,	
    '' EFL_TTE_CD,	
    '' ASB_DT_INSTALACAO,	
    '' ASB_TNP_CD,	
    '' ASB_NU_DIAMETROPERFURACAO,	
    '' ASB_NU_DIAMETROFILTRO,	
    '' ASB_TPA_CD,	
    '' ASB_NU_TOPO,	
    '' ASB_NU_BASE,	
    '' ASB_TCQ_CD,	
    '' ASB_NU_PROFUNDIDADEFINAL,	
    '' ASB_NU_ALTURABOCATUBO,	
    '' ASB_NU_COTATERRENO,	
    '' ASB_DS_AQUIFEROEXPLOTADO,	
    '' TST_TTB_CD,	
    '' TST_DS_TEMPODURACAO,	
    '' TST_NU_ND,	
    '' TST_NU_NE,	
    '' TST_VZ_ESTABILIZACAO,	
    '' TST_TMI_CD,	
    '' TST_NU_COEFICIENTEARMAZENAMENT,	
    '' TST_NU_TRANSMISSIVIDADE,	
    '' TST_NU_CONDUTIVIDADEHIDRAULICA,	
    '' TST_NU_PERMEABILIDADE,	
    '' AMA_DT_COLETA,	
    '' AMA_DT_ANALISE,	
    '' AMA_NU_CONDUTIVIDADEELETRICA,	
    '' AMA_QT_TEMPERATURA,	
    '' AMA_QT_STD,	
    '' AMA_QT_PH,	
    '' AMA_QT_COLIFORMESTOTAIS,	
    '' AMA_QT_COLIFORMESFECAIS,	
    '' AMA_QT_BICARBONATO,	
    '' AMA_QT_CALCIO,	
    '' AMA_QT_CARBONATO,	
    '' AMA_QT_CLORETO,	
    '' AMA_QT_DUREZATOTAL,	
    '' AMA_QT_FERROTOTAL,	
    '' AMA_QT_FLUORETOS,	
    '' AMA_QT_NITRATOS,	
    '' AMA_QT_NITRITOS,	
    '' AMA_QT_POTASSIO,	
    '' AMA_QT_SODIO,	
    '' AMA_QT_SULFATO,	
    '' AMA_QT_MAGNESIO

    FROM gisadmin.INTERFERENCIA A
    INNER JOIN gisadmin.EMPREENDIMENTO B
    ON A.ID_EMPREENDIMENTO = B.ID_EMPREENDIMENTO
    INNER JOIN gisadmin.USUARIO C
    ON B.ID_USUARIO = C.ID_USUARIO
    INNER JOIN gisadmin.TIPO_ATO D
    ON A.ID_TIPO_ATO = D.ID_TIPO_ATO
    INNER JOIN 
    /* DECIMAL(10,1) => Os valores devem ser com uma casa decimal. Ex: 151,2 e 0,0. */
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES/*Multiplicando por 3.6 para converter para m3/h*/
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 1) E
    ON A.ID_INTERFERENCIA = E.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 2) F
    ON A.ID_INTERFERENCIA = F.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 3) G
    ON A.ID_INTERFERENCIA = G.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 4) H
    ON A.ID_INTERFERENCIA = H.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 5) I
    ON A.ID_INTERFERENCIA = I.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 6) J
    ON A.ID_INTERFERENCIA = J.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 7) L
    ON A.ID_INTERFERENCIA = L.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 8) M
    ON A.ID_INTERFERENCIA = M.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 9) N
    ON A.ID_INTERFERENCIA = N.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 10) O
    ON A.ID_INTERFERENCIA = O.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 11) P
    ON A.ID_INTERFERENCIA = P.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, REPLACE(CAST(CAST(VAZAO * 3.6 AS DECIMAL(10, 1)) AS VARCHAR), '.', ',') AS VAZAO, QT_DIAS, TEMPO_CAPTACAO, MES
    FROM gisadmin.DEMANDA_TOTAL 
    WHERE MES = 12) Q
    ON A.ID_INTERFERENCIA = Q.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT ID_INTERFERENCIA, MAX(STR(VAZAO*3.6,10,2)) AS MAX_VAZAO
    FROM gisadmin.DEMANDA_TOTAL 
    GROUP BY ID_INTERFERENCIA) R
    ON A.ID_INTERFERENCIA = R.ID_INTERFERENCIA
    INNER JOIN 
    (SELECT FIN.ID_INTERFERENCIA, FIN2.ID_TIPO_FINALIDADE, FIN.MAX_VAZAO, FIN2.SUBFINALIDADE
    FROM 
        (SELECT ID_INTERFERENCIA, MAX(VAZAO) AS MAX_VAZAO
        FROM GISADMIN.FINALIDADE
        GROUP BY ID_INTERFERENCIA) FIN
    INNER JOIN gisadmin.FINALIDADE FIN2
    ON FIN.ID_INTERFERENCIA = FIN2.ID_INTERFERENCIA
    AND FIN2.VAZAO = FIN.MAX_VAZAO) S
    ON A.ID_INTERFERENCIA = S.ID_INTERFERENCIA
    INNER JOIN gisadmin.SUPERFICIAL2 T
    ON A.ID_INTERFERENCIA = T.ID_INTERFERENCIA

    WHERE A.VERIFICADO = 'OK' 

    AND A.ID_SITUACAO = 4 -- Retorna aqueles que foram realmente outorgados
    AND A.ID_INTERFERENCIA IN (${paramsIds})
    -- Ordenar pela ordem de ids buscadas que é a ordem de proximidade do ponto
    ORDER  BY CHARINDEX(CAST(A.ID_INTERFERENCIA AS VARCHAR), '${paramsIds}') 
`
}
module.exports = querySelectSuperficiaisForUpdate;